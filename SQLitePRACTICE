SELECT * FROM BIT_DB.customers LIMIT 10;
SELECT * FROM BIT_DB.FebSales LIMIT 10;
--How many orders were placed in January?
SELECT COUNT(BIT_DB.JanSales.orderID) FROM BIT_DB.JanSales;
--How many of those orders were for an iPhone?
SELECT COUNT(BIT_DB.JanSales.orderID) FROM BIT_DB.JanSales 
WHERE BIT_DB.JanSales.Product='iPhone';
--Select the customer account numbers for all the orders that were placed in February.
SELECT (BIT_DB.customers.acctnum) FROM BIT_DB.FebSales 
JOIN BIT_DB.customers 
ON BIT_DB.FebSales.orderID = BIT_DB.customers.order_id;
--Which product was the cheapest one sold in January, and what was the price? 
--For this one, you are going to use the commands distinct and MIN(). Using 'SELECT distinct' will remove duplicate rows from your results. 
--The MIN() command will allow you to select the smallest value from the price column.
SELECT distinct BIT_DB.JanSales.Product, MIN(BIT_DB.JanSales.price) FROM BIT_DB.JanSales;

SELECT distinct product, MIN(price)  FROM BIT_DB.JanSales Jan 
GROUP BY product, price 
ORDER BY price ASC LIMIT 1;


--What is the total revenue for each product sold in January? 
SELECT product, SUM(quantity)*price as revenue FROM BIT_DB.JanSales  
GROUP BY product
ORDER BY revenue DESC;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(quantity), SUM(quantity)*price as revenue FROM BIT_DB.FebSales
GROUP BY product
HAVING location= '548 Lincoln St, Seattle, WA 98101';


select 
sum(Quantity), 
product, 
sum(quantity)*price as revenue
FROM BIT_DB.FebSales 
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?



SELECT count(cust.acctnum), avg(quantity*price)FROM BIT_DB.FebSales Feb
JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2;

SELECT * FROM BIT_DB.FebSales Feb
JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
ORDER BY acctnum DESC;

SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

SELECT count (orderdate)
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

--List all the products sold in Los Angeles in February, and include how many of each were sold
SELECT  Product, sum(quantity) FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP By Product;


--Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING
SELECT location, count(orderID)as Numoforders FROM BIT_DB.JanSales
WHERE location like '%New York%'
GROUP by location
HAVING Numoforders>=3;

--How many of each type of headphone were sold in February?
SELECT product, sum(quantity) FROM BIT_DB.FebSales
WHERE product like '%headphone%'
GROUP by product;

--For this question, we want the average amount spent / number of accounts, not the amount spent by each account).
SELECT sum(sal.quantity*sal.price)/count(cust.acctnum) FROM BIT_DB.FebSales sal
JOIN BIT_DB.customers cust
ON sal.orderID = cust.order_id;

--What was the average quantity of products purchased per account in February?
--we want the overall average, not the average for each account individually
SELECT sum(sal.Quantity)/count(cust.acctnum) FROM BIT_DB.FebSales sal
JOIN BIT_DB.customers cust
ON sal.orderID = cust.order_id;

--Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(price*Quantity)as REV FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY REV DESC
LIMIT 1;


